{
    "vector hash": {
        "scope": "cpp",
        "prefix": "vector_hash",
        "body": [
            "",
            "template <class _data_class = int, int _base = 13331> constexpr uint64_t vector_hash(const vector<_data_class> &vec) {",
            "    uint64_t res = 0;",
            "    for (const auto element : vec) {",
            "        res = _base * (uint64_t(element) + res + _base);",
            "    }",
            "    return res;",
            "}",
            ""
        ]
    }
}

// Place your 全局 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
// Placeholders with the same ids are connected.
// Example:
// "Print to console": {
// 	"scope": "javascript,typescript",
// 	"prefix": "log",
// 	"body": [
// 		"console.log('$1');",
// 		"$2"
// 	],
// 	"description": "Log output to console"
// }