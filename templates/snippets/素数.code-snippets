{
    "暴力判断素数": {
        "scope": "cpp",
        "prefix": "is_prime",
        "body": [
            "",
            "bool bf_is_prime(long long x) {",
            "    if (x < 2) return false;",
            "    long long rt = sqrt(x);",
            "    for (int i = 2; i <= rt; ++i)",
            "        if (x % i == 0) return false;",
            "    return true;",
            "}",
            ""
        ],
        "description": "暴力判断素数"
    },
    "线性筛": {
        "scope": "cpp",
        "prefix": "xianxingshai",
        "body": [
            "template <typename T> struct prime {",
            "    T max_num;",
            "    vector<T> primes;",
            "    vector<int> visted;",
            "    prime(T max_num) : max_num(max_num), primes(), visted(max_num + 1, 0) {",
            "        for (T i = 2; i <= max_num; ++i) {",
            "            if (!visted[i]) primes.emplace_back(i);",
            "            for (T j = 0; j < primes.size() && (__int128_t)(primes[j] * i) <= max_num; ++j) {",
            "                visted[primes[j] * i] = 1;",
            "                if (i % primes[j] == 0) break;",
            "            }",
            "        }",
            "    }",
            "    bool is_prime(T x) {",
            "        if (x < 2 || x > max_num) return false;",
            "        return !visted[x];",
            "    }",
            "};"
        ],
        "description": "线性筛"
    }
}