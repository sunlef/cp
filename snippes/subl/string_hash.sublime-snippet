<snippet>
<content><![CDATA[
struct base_pow {
    int N, base;
    std::vector<uint64_t> val;

    base_pow(int _N, int _base = 13331) : N(_N), base(_base), val(N + 1, 1) {
        for (int i = 1; i <= N; ++i) {
            val[i] = base * val[i - 1];
        }
    }
};

struct string_hash {
    size_t N;
    int base;
    std::vector<uint64_t> pre;
    std::vector<uint64_t>::const_iterator it_begin;

    string_hash(const std::string &str, const base_pow &bp, int _base = 13331)
        : N(str.size()), base(_base), pre(str.size() + 1, 0), it_begin(bp.val.begin()) {
        for (size_t i = 1; i <= N; ++i) {
            pre[i] = base * pre[i - 1] + str[i - 1] + base;
        }
    }

    uint64_t sub(size_t l, size_t r) {
        assert(l >= 1 && r <= N);
        return pre[r] - pre[l - 1] * *(it_begin + r - l + 1);
    }
};
]]></content>
<tabTrigger>string_hash</tabTrigger>
<description>字符串哈希</description>
<scope>source.c++</scope>
</snippet>